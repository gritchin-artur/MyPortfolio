{"version":3,"file":"static/js/973.bedc674a.chunk.js","mappings":"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","sources":["components/blocs/header/header.styled.js","components/blocs/header/header.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const HeaderMainContainer = styled.div`\n  width: 100%;\n  height: 50px;\n  /* border: 1px solid red; */\n  border-radius: 5px;\n  box-sizing: border-box;\n    display: flex;\n    align-items: center;\n  position: fixed;\n  z-index: 1000;\n  justify-content: center;\n  margin-top: 10px;\n\n\n  .HeaderList {\n    display: flex;\n    list-style: none;\n    max-width: 500px;\n    margin: 0;\n    padding: 0;\n    justify-content: space-evenly;\n    color: white;\n    font-size: larger;\n     backdrop-filter: blur(8px);\n     -webkit-backdrop-filter: blur(10px);\n     border-radius: 20px;\npadding: 20px 40px;\n     gap: 30px;\n    @media only screen and (max-width: 768px) {\n      display: none;\n    }\n\n      @media only screen and (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  }\n\n  .HeaderItem {\n    cursor: pointer;\n    transition: transform 0.3s ease;\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n\n  .HeaderItem.active {\n  color: black;\n}\n\n  .LinkToContainer {\n    text-decoration: none;\n    /* color: #fff; */\n\n    @media only screen and (max-width: 768px) {\n      font-size: 12px;\n    }\n  }\n\n  .BurgerMenu {\n    @media only screen and (max-width: 768px) {\n      position: absolute;\n      top: 20px;\n      right: 20px;\n      width: 30px;\n      height: 20px;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      cursor: pointer;\n      z-index: 1000;\n    }\n  }\n\n  .BurgerLine {\n    @media only screen and (max-width: 768px) {\n      width: 30px;\n      height: 4px;\n      background-color: ${({isPortfolioVisible}) => isPortfolioVisible? \"grey\" : \"white\"};\n      transition: transform 0.3s ease, opacity 0.3s ease, top 0.3s ease;\n\n      ${({ open }) =>\n        open &&\n        `\n    &:nth-child(1) {\n      transform: rotate(45deg);\n            margin-top: 9px;\n            height: 200px;\n    }\n    &:nth-child(2) {\n      opacity: 0;\n    }\n    &:nth-child(3) {\n      transform: rotate(-45deg);\n      margin-bottom: 9px;\n      height: 200px;\n    }\n  `}\n    }\n  }\n`;\n\nexport const ModalWindow = styled.div`\ndisplay: none;\n  @media only screen and (max-width: 768px) {\n    position: fixed;\n    top: 0;\n    right: 0;\n    width: 40%;\n    height: 100%;\n    backdrop-filter: blur(20px);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 100;\n    transition: transform 0.5s ease, visibility 0.5s ease;\n\n    transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(100%)\")};\n    visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n\n    .HeaderList {\n      display: grid;\n      gap: 20px;\n    }\n\n    .HeaderItem {\n      font-size: 25px;\n      font-weight: 800;\n      text-align: center;\n      font-family: serif;\n    }\n  }\n`;\n","import { useEffect, useMemo, useState } from \"react\";\nimport { HeaderMainContainer, ModalWindow } from \"./header.styled\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nexport default function Header() {\n  const [isOpen, setIsOpen] = useState(false);\n    const [isPortfolioVisible, setIsPortfolioVisible] = useState(false);\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.code === \"Escape\") {\n        setIsOpen(false);\n      }\n    };\n    const rootElement = document.getElementById(\"root\");\n\n    const handleClickOutside = (e) => {\n      setIsOpen(false);\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    rootElement.addEventListener(\"click\", handleClickOutside);\n    // document.body.style.cssText = `overflow: hidden;`;\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n      rootElement.removeEventListener(\"click\", handleClickOutside);\n      // document.body.style.cssText = `overflow: auto; `;\n    };\n  }, [isOpen]);\n\n  const scrollToSection = (sectionName) => {\n    if (sectionName === \"portfolio\") {\n      \n    }\n    const section = document.getElementById(`section-${sectionName}`);\n    section.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    const portfolioSection = document.getElementById(\"section-portfolio\");\n    \n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          setIsPortfolioVisible(true);\n        } else {\n          setIsPortfolioVisible(false);\n        }\n      });\n    }, {\n      threshold: 0.5\n    });\n\n    if (portfolioSection) {\n      observer.observe(portfolioSection);\n    }\n\n    return () => {\n      if (portfolioSection) {\n        observer.unobserve(portfolioSection);\n      }\n    };\n  }, []);\n\n  const renderedModalWindow = useMemo(() => {\n    return createPortal(\n      <ModalWindow open={isOpen}>\n        <ul className=\"HeaderList\">\n          <li className=\"HeaderItem\" onClick={() => scrollToSection(\"main\")}>\n            Main\n          </li>\n          <li className=\"HeaderItem\" onClick={() => scrollToSection(\"aboutMe\")}>\n            About me\n          </li>\n          <li\n            className=\"HeaderItem\"\n            onClick={() => scrollToSection(\"portfolio\")}\n          >\n            Portfolio\n          </li>\n          <li\n            className=\"HeaderItem\"\n            onClick={() => scrollToSection(\"hard-skils\")}\n          >\n            Skils\n          </li>\n          <li\n            className=\"HeaderItem\"\n            onClick={() => scrollToSection(\"contacts\")}\n          >\n            Contacts\n          </li>\n        </ul>\n      </ModalWindow>,\n      modalRoot\n    );\n  }, [isOpen]);\n\n  return (\n    <HeaderMainContainer open={isOpen} isPortfolioVisible={isPortfolioVisible}>\n      <div className=\"BurgerMenu\" onClick={toggleMenu}>\n        {/* <span className=\"BurgerLine\" /> */}\n        <span className=\"BurgerLine\" style={{ position: \"relative\", top: 0 }} />\n        <span className=\"BurgerLine\" style={{ position: \"relative\", top: 0 }} />\n        <span className=\"BurgerLine\" style={{ position: \"relative\", top: 0 }} />\n      </div>\n      {renderedModalWindow}\n      <ul className=\"HeaderList\">\n        <li className={`HeaderItem ${isPortfolioVisible ? 'active' : ''}`} onClick={() => scrollToSection(\"main\")}>\n          Main\n        </li>\n        <li className={`HeaderItem ${isPortfolioVisible ? 'active' : ''}`} onClick={() => scrollToSection(\"aboutMe\")}>\n          About me\n        </li>\n        <li className={`HeaderItem ${isPortfolioVisible ? 'active' : ''}`} onClick={() => scrollToSection(\"portfolio\")}>\n          Portfolio\n        </li>\n        <li\n          className={`HeaderItem ${isPortfolioVisible ? 'active' : ''}`}\n          onClick={() => scrollToSection(\"hard-skils\")}\n        >\n          Skils\n        </li>\n        <li className={`HeaderItem ${isPortfolioVisible ? 'active' : ''}`} onClick={() => scrollToSection(\"contacts\")}>\n          Contacts\n        </li>\n        </ul>\n    </HeaderMainContainer>\n  );\n}\n"],"names":["HeaderMainContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","isPortfolioVisible","_ref2","open","ModalWindow","_templateObject2","_ref3","_ref4","modalRoot","document","querySelector","Header","isOpen","setIsOpen","useState","setIsPortfolioVisible","useEffect","handleKeyDown","e","code","rootElement","getElementById","handleClickOutside","addEventListener","removeEventListener","scrollToSection","sectionName","concat","scrollIntoView","behavior","portfolioSection","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","threshold","observe","unobserve","renderedModalWindow","useMemo","createPortal","_jsx","children","_jsxs","className","onClick","toggleMenu","style","position","top"],"sourceRoot":""}